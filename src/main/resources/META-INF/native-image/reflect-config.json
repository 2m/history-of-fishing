[
{
  "name":"akka.actor.ActorCell",
  "allDeclaredFields":true,
  "fields":[
    {"name":"akka$actor$dungeon$Children$$_childrenRefsDoNotCallMeDirectly", "allowUnsafeAccess":true}, 
    {"name":"akka$actor$dungeon$Children$$_functionRefsDoNotCallMeDirectly", "allowUnsafeAccess":true}, 
    {"name":"akka$actor$dungeon$Children$$_nextNameDoNotCallMeDirectly", "allowUnsafeAccess":true}, 
    {"name":"akka$actor$dungeon$Dispatch$$_mailboxDoNotCallMeDirectly", "allowUnsafeAccess":true}
  ]
},
{
  "name":"akka.actor.DefaultSupervisorStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.actor.LightArrayRevolverScheduler",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config","akka.event.LoggingAdapter","java.util.concurrent.ThreadFactory"] }]
},
{
  "name":"akka.actor.LightArrayRevolverScheduler$TaskHolder",
  "fields":[{"name":"task", "allowUnsafeAccess":true}]
},
{
  "name":"akka.actor.LightArrayRevolverScheduler$TaskQueue[]"
},
{
  "name":"akka.actor.LocalActorRefProvider",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","akka.actor.ActorSystem$Settings","akka.event.EventStream","akka.actor.DynamicAccess"] }]
},
{
  "name":"akka.actor.LocalActorRefProvider$Guardian",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.actor.LocalActorRefProvider$SystemGuardian",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.actor.Props$EmptyActor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.actor.RepointableActorRef",
  "fields":[
    {"name":"_cellDoNotCallMeDirectly", "allowUnsafeAccess":true}, 
    {"name":"_lookupDoNotCallMeDirectly", "allowUnsafeAccess":true}
  ]
},
{
  "name":"akka.dispatch.AbstractNodeQueue",
  "fields":[{"name":"_tailDoNotCallMeDirectly", "allowUnsafeAccess":true}]
},
{
  "name":"akka.dispatch.AbstractNodeQueue$Node",
  "fields":[{"name":"_nextDoNotCallMeDirectly", "allowUnsafeAccess":true}]
},
{
  "name":"akka.dispatch.BoundedControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.BoundedDequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.BoundedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.ControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.DequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.Mailbox",
  "fields":[
    {"name":"_statusDoNotCallMeDirectly", "allowUnsafeAccess":true}, 
    {"name":"_systemQueueDoNotCallMeDirectly", "allowUnsafeAccess":true}
  ]
},
{
  "name":"akka.dispatch.MessageDispatcher",
  "fields":[
    {"name":"_inhabitantsDoNotCallMeDirectly", "allowUnsafeAccess":true}, 
    {"name":"_shutdownScheduleDoNotCallMeDirectly", "allowUnsafeAccess":true}
  ]
},
{
  "name":"akka.dispatch.MultipleConsumerSemantics"
},
{
  "name":"akka.dispatch.UnboundedControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.UnboundedDequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.UnboundedMailbox",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]
},
{
  "name":"akka.dispatch.UnboundedMessageQueueSemantics"
},
{
  "name":"akka.event.DeadLetterListener",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.event.DefaultLoggingFilter",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","akka.event.EventStream"] }]
},
{
  "name":"akka.event.EventStreamUnsubscriber",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.event.LoggerMailboxType",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]
},
{
  "name":"akka.event.LoggerMessageQueueSemantics"
},
{
  "name":"akka.event.Logging$DefaultLogger",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.pattern.PromiseActorRef",
  "fields":[
    {"name":"_stateDoNotCallMeDirectly", "allowUnsafeAccess":true}, 
    {"name":"_watchedByDoNotCallMeDirectly", "allowUnsafeAccess":true}
  ]
},
{
  "name":"akka.routing.ConsistentHashingPool",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config"] }]
},
{
  "name":"akka.routing.RoundRobinPool",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config"] }]
},
{
  "name":"akka.stream.SystemMaterializer$",
  "fields":[{"name":"MODULE$"}]
},
{
  "name":"akka.stream.impl.MaterializerGuardian",
  "allDeclaredFields":true
},
{
  "name":"akka.stream.impl.StreamSupervisor",
  "allDeclaredFields":true
},
{
  "name":"akka.stream.impl.fusing.ActorGraphInterpreter",
  "allDeclaredFields":true
},
{
  "name":"akka.stream.stage.GraphStageLogic[]"
},
{
  "name":"fansi.Attr[]"
},
{
  "name":"fansi.Category[]"
},
{
  "name":"java.lang.Class[]"
},
{
  "name":"java.lang.String",
  "fields":[{"name":"value", "allowUnsafeAccess":true}]
},
{
  "name":"java.lang.invoke.VarHandle"
},
{
  "name":"scala.Tuple2[]"
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true
}
]
